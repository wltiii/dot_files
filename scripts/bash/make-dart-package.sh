#!/usr/bin/env bash

# creates a dart package library file hierarchy and initial files

# USAGE:
#     Run command:
#         $ make-dart-package <package name>

# SEE: https://dart.dev/guides/libraries/create-library-packages

# TODO:
# 1) do not delete files that exist - DONE
# 2) prompt for file replacement
# 3) add step to create workman alias
# 4) create .gitignore - DONE
# 5) commit
# 6) push to github (with config for repo)
# 7) generate with alternate license

makePath() {
  path="$1"

  if [ ! -d "$path" ]; then
    echo "creating directory $path..."
    mkdir $path
  else
    echo "Path $path exists. Skipping..."
  fi
}

addMITLicense() {
  path="$1"
  FILE="LICENSE"
  CONTENT="MIT License

  Copyright (c) 2022 Bill Turner

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
"

  addFile $path $FILE "$CONTENT"
}

addReadMe() {
  path="$1"

  FILE="README.md"
  CONTENT="# $path
"

  addFile $path $FILE "$CONTENT"
}

addGitIgnore() {
  path="$1"

  FILE=".gitignore"

  CONTENT="# See https://www.dartlang.org/guides/libraries/private-files

 # Files and directories created by pub
 .dart_tool/
 .packages
 build/
 # If you're building an application, you may want to check-in your pubspec.lock
 pubspec.lock

 # Directory created by dartdoc
 # If you don't generate documentation locally you can remove this line.
 doc/api/

 # Avoid committing generated Javascript files:
 *.dart.js
 *.info.json      # Produced by the --dump-info flag.
 *.js             # When generated by dart2js. Don't specify *.js if your
                  # project includes source files written in JavaScript.
 *.js_
 *.js.deps
 *.js.map

# IntelliJ related
*.iml
*.ipr
*.iws
# to ignore all in folder with exceptions, you need to (using .idea folder as example):
# 1) mark idea as ignored.
/.idea/**
# 2) mark desired subdirectory as not ignored.
!/.idea/codeStyles/
# 3) mark file as not ignored.
!/.idea/codeStyles/codeStyleConfig.xml
# 2) mark desired subdirectory as not ignored.
!/.idea/intellij-run-config/
# 3) mark file as not ignored.
!/.idea/intellij-run-config/All Tests.run.xml
!/.idea/intellij-run-config/Main (dev).run.xml
# perhaps a git expert can improve on above


# The .vscode folder contains launch configuration and tasks you configure in
# VS Code which you may wish to be included in version control, so this line
# is commented out by default.
#.vscode/

# Coverage (lcov)
/coverage/html/*
/coverage/lcov.info

"

  addFile $path $FILE "$CONTENT"
}

addFile() {
  path="$1"
  file="$2"
  content="$3"

  FILE="$path"/"$file"

  if [ -f "$FILE" ]; then
      echo "$FILE already exists. Skipping..."
      return
  fi

  echo "creating $FILE..."

  touch $FILE

  echo "$content" >> $FILE
}

doMake() {
  pkg="$1"

  echo "Making package $pkg..."

  makePath $pkg
  makePath "$pkg/example"
  makePath "$pkg/lib"
  makePath "$pkg/lib/src"
  makePath "$pkg/test"
#  makePath "$pkg/example"

  addMITLicense $pkg
  addReadMe $pkg
  addGitIgnore $pkg
}

package="$1"
doMake $package
